{"version":3,"sources":["components/navbar/item/ItemMenu.module.scss","components/profile/profileInfo/ProfileInfo.module.scss","components/dialogs/Dialogs.tsx","components/login/LoginApiComponent.tsx","components/profile/ProfileAPIContainer.tsx","components/users/UsersAPIComponent.tsx","enum/resultCode.ts","enum/path.ts","store/actions/appActions.ts","store/actions/authAction.ts","store/actions/dialogActions.ts","store/actions/profileActions.ts","store/actions/userActions.ts","components/dialogs/dialogsMessage/DialogsMessage.module.scss","components/navbar/Navbar.module.scss","components/dialogs/dialogsName/DialogsName.tsx","components/dialogs/dialogsMessage/DialogsMessage.tsx","components/header/Header.tsx","components/header/HeaderAPIContainer.tsx","components/header/HeaderContainer.tsx","components/navbar/item/ItemMenu.tsx","components/navbar/Navbar.tsx","components/profile/Profile.tsx","components/profile/myPosts/post/Post.tsx","components/profile/myPosts/post/PostMap.tsx","components/profile/myPosts/MyPosts.tsx","components/profile/myPosts/MyPostsContainer.tsx","assets/img/defaultAvatar.png","assets/img/profileBackground.webp","components/profile/profileInfo/Contact.tsx","components/profile/profileInfo/ProfileInfo.tsx","components/profile/profileInfo/ProfileStatus.tsx","assets/img/defaultUsersAvatar.webp","components/users/user/User.tsx","api/instanceApi.ts","api/authApi.ts","api/profileApi.ts","api/userApi.ts","utils/validator/validator.ts","utils/paginator/paginator.ts","components/login/login.module.scss","components/common/forms/formsControls/Input.tsx","components/common/forms/formsControls/TextArea.tsx","components/common/preloader/Preloader.tsx","components/common/icon/IconS.tsx","reportWebVitals.ts","App.tsx","AppContainer.tsx","store/reducers/appReducer.ts","store/reducers/dialogsReducer.ts","store/reducers/profileReducer.ts","store/reducers/usersReducer.ts","store/reducers/authReducer.ts","store/store.ts","index.tsx","components/common/forms/formsControls/TextArea.module.scss","components/header/Header.module.scss","store/selectors/appSelectors.ts","store/selectors/authSelectors.ts","store/selectors/dialogsSelectors.ts","store/selectors/profileSelectors.ts","store/selectors/usersSelectors.ts","components/login/LoginForm.tsx","components/login/Login.tsx","components/profile/myPosts/post/Post.module.scss","components/users/user/User.module.scss","store/thunks/profileThunks.ts","store/thunks/authThunks.ts","store/thunks/appthunks.ts","store/thunks/usersThunks.ts","components/users/Users.tsx","App.module.scss","components/dialogs/Dialogs.module.scss","components/dialogs/dialogsName/DialogsName.module.scss"],"names":["module","exports","maxLength50","maxLengthCreator","ReduxDialogTextArea","reduxForm","form","handleSubmit","onSubmit","type","name","placeholder","component","TextArea","validate","requiredField","Dialogs","this","props","addMessageHandler","dialogs","messages","dialogsElement","map","id","dialogsMessage","message","className","style","wrapper","list","formData","newMessage","PureComponent","LoginApiComponent","login","isAuth","ProfileAPIContainer","refreshProfile","authUserId","requestProfile","requestStatus","userId","prevProps","profile","status","updateStatus","savePhoto","isOwner","Component","UsersAPIComponent","onPageChanged","pageNumber","requestUsers","pageSize","isFetching","users","follow","unFollow","followingInProgress","currentPage","totalUserCount","resultCode","path","initializedSuccess","setToggleIsAuth","setUserAuth","usersId","email","data","setToggleIsFetching","addMessage","newText","addPost","removePost","removeId","addLike","LikeId","isLike","setUserProfile","setUserStatus","savePhotoSuccess","photo","setFollow","setUnFollow","setUsers","setCurrentPage","setTotalUserCount","toggleFollowingInProgress","isFollow","DialogsName","to","navDate","isActive","active","DialogsMessage","Header","auth","logout","header","wrap","button","onClick","HeaderAPIContainer","HeaderContainer","connect","state","getLogin","getAuthIsFetching","getIsAuth","ItemMenu","nameMenu","item","Navbar","nav","settings","Profile","padding","MyPostsContainer","Post","onClickLike","onClickRemovePost","likeCount","classNameLike","like","likeActive","post","alt","src","PostMap","posts","maxLength10","ReduxNewMyPosts","Field","MyPosts","display","marginTop","newMyPost","profilePage","dispatch","idPost","Contact","contactTitle","contactValue","ProfileInfo","large","photos","fullName","lookingForAJob","lookingForAJobDescription","contacts","aboutMe","arrayContacts","Object","keys","content","background","avatar","avatarDefault","onChange","e","target","files","length","key","ProfileStatus","changeStatus","statusProps","setState","statusState","changeOnClickStatus","currentTarget","value","offActivateEditMode","editMode","activateEditMode","onDoubleClick","undefined","autoFocus","onBlur","React","User","age","idUser","followed","small","disableFollow","some","idFollow","userPhoto","disabled","description","instance","axios","create","withCredentials","baseURL","process","headers","authApi","authMe","get","then","response","loginMe","password","rememberMe","logoutMe","delete","profileAPI","getStatus","updateStatusApi","put","file","FormData","append","usersAPI","getUsers","maxLength","paginator","totalCount","pagesCounter","Math","ceil","pages","i","push","Input","input","meta","touched","error","warning","hasError","formControl","Preloader","xmlns","width","height","fill","d","IconS","viewBox","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","DialogsContainer","lazy","ProfileContainer","UsersContainer","Settings","LoginContainer","App","initializedApp","initialized","fallback","root","element","preloader","AppContainer","getInitialized","initialState","v1","rootReducer","combineReducers","action","trim","filter","p","dialogsPage","usersPage","user","authPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","getUserId","getDialogs","getMessages","getProfile","getPageSize","getTotalUserCount","getCurrentPage","getUsersIsFetching","getFollowingInProgress","maxLength30","LoginForm","wrapper__field","ReduxLoginForm","Login","title","success","getAuthUserData","stopSubmit","_error","a","promise","Promise","all","items","Users","pageMap","page","onClickPage","fontWeight","color","cursor","usersMap","justifyContent"],"mappings":"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","file":"static/js/main.33437b68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemMenu_item__DR0El\",\"active\":\"ItemMenu_active__3-XtJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1Ov1t\",\"avatar\":\"ProfileInfo_avatar__3f_PP\"};","import { ComponentType, PureComponent, ReactElement } from 'react';\n\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport style from './Dialogs.module.scss';\n\nimport { DialogsMessage, DialogsPropsType, TextArea, DialogsName } from 'components';\nimport { maxLengthCreator, requiredField } from 'utils';\n\ntype DialogTextAreaDataType = {\n  newMessage: string;\n};\n\nconst lengthText = 50;\nconst maxLength50 = maxLengthCreator(lengthText);\n\nconst DialogTextArea: ComponentType<InjectedFormProps<DialogTextAreaDataType>> = ({\n  handleSubmit,\n}: InjectedFormProps<DialogTextAreaDataType>) => (\n  <form onSubmit={handleSubmit}>\n    <Field\n      type=\"text\"\n      name=\"newMessage\"\n      placeholder=\"Add message\"\n      component={TextArea}\n      validate={[requiredField, maxLength50]}\n    />\n    <button type=\"submit\">Add Message</button>\n  </form>\n);\n\nconst ReduxDialogTextArea = reduxForm<DialogTextAreaDataType>({\n  form: 'newMessageDialog',\n})(DialogTextArea);\n\nexport class Dialogs extends PureComponent<DialogsPropsType> {\n  render(): ReactElement {\n    const { addMessageHandler, dialogs, messages } = this.props;\n\n    const dialogsElement = dialogs.map(({ id, name }) => (\n      <DialogsName id={id} name={name} key={id} />\n    ));\n\n    const dialogsMessage = messages.map(({ message, id }) => (\n      <DialogsMessage key={id} message={message} />\n    ));\n\n    const onChangeMessage = (formData: DialogTextAreaDataType): void => {\n      addMessageHandler(formData.newMessage);\n    };\n\n    return (\n      <>\n        <div>Dialog</div>\n        <div className={style.wrapper}>\n          <div className={style.list}>{dialogsElement}</div>\n          <div className={style.messages}>\n            {dialogsMessage}\n            <ReduxDialogTextArea onSubmit={onChangeMessage} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport { Login } from '.';\n\nexport type mapStateToPropsType = {\n  isAuth: boolean;\n};\ntype mapDispatchToPropsType = {\n  login: (email: string, password: string, rememberMe: boolean) => void;\n};\nexport type LoginApiComponentPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\nexport class LoginApiComponent extends PureComponent<LoginApiComponentPropsType> {\n  render(): ReactElement {\n    const { login, isAuth } = this.props;\n    return <Login login={login} isAuth={isAuth} />;\n  }\n}\n","import { Component, ReactElement } from 'react';\n\nimport { Profile } from 'components';\nimport { InjectedProps } from 'hoc';\nimport { ProfileType } from 'type';\n\nexport type mapStateToPropsType = {\n  profile: ProfileType;\n  status: string;\n  authUserId: string;\n};\ntype mapDispatchToPropsType = {\n  addPost: (newText: string) => void;\n  RemovePost: (removeId: string) => void;\n  AddLike: (LikeId: string, isLike: boolean) => void;\n  requestProfile: (userId: string) => void;\n  requestStatus: (userId: string) => void;\n  updateStatus: (userId: string) => void;\n  savePhoto: (file: string | Blob) => void;\n};\n\nexport type ProfileAPIContainerPropsType = mapStateToPropsType &\n  mapDispatchToPropsType &\n  InjectedProps;\n\nexport class ProfileAPIContainer extends Component<ProfileAPIContainerPropsType> {\n  componentDidMount(): void {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps: Readonly<ProfileAPIContainerPropsType>): void {\n    const { userId } = this.props;\n    const { userId: prevUserId } = prevProps;\n\n    if (userId !== prevUserId) {\n      this.refreshProfile();\n    }\n  }\n\n  refreshProfile = (): void => {\n    const { authUserId, requestProfile, requestStatus } = this.props;\n    let { userId } = this.props;\n\n    if (!userId) {\n      userId = authUserId;\n    }\n    requestProfile(userId);\n    requestStatus(userId);\n  };\n\n  render(): ReactElement {\n    const { profile, status, updateStatus, userId, savePhoto } = this.props;\n\n    return (\n      <Profile\n        isOwner={!userId}\n        profile={profile}\n        status={status}\n        updateStatus={updateStatus}\n        savePhoto={savePhoto}\n      />\n    );\n  }\n}\n","import { Component, ReactElement } from 'react';\n\nimport { Users } from './Users';\n\nimport { Preloader } from 'components';\nimport { UserType } from 'type';\n\nexport type mapStateToPropsType = {\n  users: UserType[];\n  totalUserCount: number;\n  pageSize: number;\n  currentPage: number;\n  isFetching: boolean;\n  followingInProgress: number[];\n};\n\ntype mapDispatchToPropsType = {\n  toggleFollowingInProgress: (isFollow: boolean, userId: number) => void;\n  requestUsers: (currentPage: number, pageSize: number) => void;\n  follow: (id: string) => void;\n  unFollow: (id: string) => void;\n};\n\nexport type UsersAPIComponentPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\nexport class UsersAPIComponent extends Component<UsersAPIComponentPropsType> {\n  componentDidMount(): void {\n    const firstPage = 1;\n    const { requestUsers, pageSize } = this.props;\n    requestUsers(firstPage, pageSize);\n  }\n\n  onPageChanged = (pageNumber: number): void => {\n    const { requestUsers, pageSize } = this.props;\n    requestUsers(pageNumber, pageSize);\n  };\n\n  render(): ReactElement {\n    const {\n      isFetching,\n      pageSize,\n      users,\n      follow,\n      unFollow,\n      followingInProgress,\n      currentPage,\n      totalUserCount,\n    } = this.props;\n\n    return (\n      <>\n        {isFetching ? <Preloader /> : null}\n        <Users\n          users={users}\n          followingInProgress={followingInProgress}\n          totalUserCount={totalUserCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          follow={follow}\n          unFollow={unFollow}\n          onPageChanged={this.onPageChanged}\n        />\n      </>\n    );\n  }\n}\n","export enum resultCode {\n  success = 0,\n  error = 1,\n}\n","export enum path {\n  root = '/',\n  profile = '/profile/',\n  dialogs = '/dialogs/',\n  users = '/users',\n  settings = '/settings',\n  login = '/login',\n  userId = ':userId',\n}\n","export type ActionsAppType = ReturnType<typeof initializedSuccess>;\n\nexport const initializedSuccess = () =>\n  ({\n    type: 'INITIALIZED_SUCCESS',\n  } as const);\n","export type ActionsAuthType =\n  | ReturnType<typeof setUserAuth>\n  | ReturnType<typeof setToggleIsFetching>\n  | ReturnType<typeof setToggleIsAuth>;\n\nexport const setToggleIsAuth = (isAuth: boolean) =>\n  ({\n    type: 'TOGGLE-IS-AUTH',\n    isAuth,\n  } as const);\n\nexport const setUserAuth = (usersId: string, email: string, login: string) =>\n  ({\n    type: 'SET-USERS-DATA',\n    data: { usersId, email, login },\n  } as const);\n\nexport const setToggleIsFetching = (isFetching: boolean) =>\n  ({\n    type: 'TOGGLE-IS-FETCHING',\n    isFetching,\n  } as const);\n","export type ActionsDialogsType = ReturnType<typeof addMessage>;\n\nexport const addMessage = (newText: string) =>\n  ({\n    type: 'ADD-MESSAGE',\n    newText,\n  } as const);\n","import { ProfileType } from 'type';\n\nexport type ActionsProfileType =\n  | ReturnType<typeof addPost>\n  | ReturnType<typeof removePost>\n  | ReturnType<typeof addLike>\n  | ReturnType<typeof setUserProfile>\n  | ReturnType<typeof setUserStatus>\n  | ReturnType<typeof savePhotoSuccess>;\n\nexport const addPost = (newText: string) =>\n  ({\n    type: 'ADD-POST',\n    newText,\n  } as const);\n\nexport const removePost = (removeId: string) =>\n  ({\n    type: 'REMOVE-POST',\n    removeId,\n  } as const);\n\nexport const addLike = (LikeId: string, isLike: boolean) =>\n  ({\n    type: 'ADD-LIKE',\n    LikeId,\n    isLike,\n  } as const);\n\nexport const setUserProfile = (profile: ProfileType) =>\n  ({\n    type: 'SET-USER-PROFILE',\n    profile,\n  } as const);\n\nexport const setUserStatus = (status: any) =>\n  ({\n    type: 'SET-USER-STATUS',\n    status,\n  } as const);\n\nexport const savePhotoSuccess = (photo: any) =>\n  ({\n    type: 'SAVE-PHOTO-SUCCESS',\n    photo,\n  } as const);\n","import { setToggleIsFetching } from 'store/actions';\nimport { UserType } from 'type';\n\nexport type ActionsUsersType =\n  | ReturnType<typeof setFollow>\n  | ReturnType<typeof setUnFollow>\n  | ReturnType<typeof setUsers>\n  | ReturnType<typeof setCurrentPage>\n  | ReturnType<typeof setTotalUserCount>\n  | ReturnType<typeof toggleFollowingInProgress>\n  | ReturnType<typeof setToggleIsFetching>;\n\nexport const setFollow = (id: string) =>\n  ({\n    type: 'SET-FOLLOW',\n    id,\n  } as const);\nexport const setUnFollow = (id: string) =>\n  ({\n    type: 'SET-UNFOLLOW',\n    id,\n  } as const);\n\nexport const setUsers = (users: UserType[]) =>\n  ({\n    type: 'SET-USERS',\n    users,\n  } as const);\nexport const setCurrentPage = (currentPage: number) =>\n  ({\n    type: 'SET-CURRENT-PAGE',\n    currentPage,\n  } as const);\nexport const setTotalUserCount = (totalUserCount: number) =>\n  ({\n    type: 'SET-TOTAL-USER-COUNT',\n    totalUserCount,\n  } as const);\n\nexport const toggleFollowingInProgress = (isFollow: boolean, userId: number) =>\n  ({\n    type: 'FOLLOWING-IN-PROGRESS',\n    isFollow,\n    userId,\n  } as const);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"DialogsMessage_message__1GWM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__qACqF\"};","import { PureComponent, ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport style from './DialogsName.module.scss';\n\nimport { path } from 'enum';\n\ntype DialogsNamePropsType = {\n  name: string;\n  id: string;\n};\n\nexport class DialogsName extends PureComponent<DialogsNamePropsType> {\n  render(): ReactElement {\n    const { name, id } = this.props;\n    return (\n      <div className={style.name}>\n        <NavLink\n          to={`${path.dialogs}${id}`}\n          className={navDate => (navDate.isActive ? style.active : '')}\n        >\n          {name}\n        </NavLink>\n      </div>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport style from './DialogsMessage.module.scss';\n\ntype DialogsMessagePropsType = {\n  message: string;\n};\n\nexport class DialogsMessage extends PureComponent<DialogsMessagePropsType> {\n  render(): ReactElement {\n    const { message } = this.props;\n    return <div className={style.message}>{message}</div>;\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport style from './Header.module.scss';\n\nimport { IconS } from 'components';\nimport { path } from 'enum';\n\ntype HeaderPropsType = {\n  login: string;\n  auth: boolean;\n  logout: () => void;\n};\n\nexport class Header extends PureComponent<HeaderPropsType> {\n  render(): ReactElement {\n    const { login, auth, logout } = this.props;\n    return (\n      <header className={style.header}>\n        <div className={style.wrap}>\n          <IconS />\n          <div>\n            {auth ? (\n              <span className={style.name}>{login}</span>\n            ) : (\n              <span className={style.name}>guest</span>\n            )}\n            {auth ? (\n              <NavLink className={style.button} onClick={logout} to={path.login}>\n                Logout\n              </NavLink>\n            ) : (\n              <NavLink className={style.button} to={path.login}>\n                Login\n              </NavLink>\n            )}\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport { Header } from './Header';\n\nexport type mapStateToPropsType = {\n  login: string;\n  isFetching: boolean;\n  auth: boolean;\n};\n\ntype mapDispatchToPropsType = {\n  setToggleIsFetching: (isFetching: boolean) => void;\n  logout: () => void;\n};\n\ntype HeaderAPIContainerType = mapStateToPropsType & mapDispatchToPropsType;\n\nexport class HeaderAPIContainer extends PureComponent<HeaderAPIContainerType> {\n  render(): ReactElement {\n    const { auth, login, logout } = this.props;\n    return <Header login={login} auth={auth} logout={logout} />;\n  }\n}\n","import { connect } from 'react-redux';\n\nimport { mapStateToPropsType, HeaderAPIContainer } from './HeaderAPIContainer';\n\n// import { HeaderAPIContainer } from 'components';\nimport { AppStateType } from 'store';\nimport { setToggleIsFetching } from 'store/actions';\nimport { getAuthIsFetching, getIsAuth, getLogin } from 'store/selectors';\nimport { logout } from 'store/thunks';\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n  login: getLogin(state),\n  isFetching: getAuthIsFetching(state),\n  auth: getIsAuth(state),\n});\n\nexport const HeaderContainer = connect(mapStateToProps, {\n  setToggleIsFetching,\n  logout,\n})(HeaderAPIContainer);\n","import { PureComponent, ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport style from './ItemMenu.module.scss';\n\ntype ItemMenuPropsType = {\n  nameMenu: string;\n  to: string;\n};\n\nexport class ItemMenu extends PureComponent<ItemMenuPropsType> {\n  render(): ReactElement {\n    const { nameMenu, to } = this.props;\n\n    return (\n      <div className={style.item}>\n        <NavLink className={style.active} to={to}>\n          {nameMenu}\n        </NavLink>\n      </div>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport style from './Navbar.module.scss';\n\nimport { ItemMenu } from 'components';\nimport { path } from 'enum';\n\nexport class Navbar extends PureComponent {\n  render(): ReactElement {\n    return (\n      <nav className={style.nav}>\n        <ItemMenu to={path.profile} nameMenu=\"Profile\" />\n        <ItemMenu to={path.dialogs} nameMenu=\"Message\" />\n        <ItemMenu to={path.users} nameMenu=\"Users\" />\n        <ItemMenu to={path.settings} nameMenu=\"Settings\" />\n      </nav>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport { MyPostsContainer, ProfileInfo } from '.';\n\nimport { ProfileType } from 'type';\n\ntype ProfilePropsType = {\n  profile: ProfileType;\n  status: string;\n  updateStatus: (userId: string) => void;\n  isOwner: boolean;\n  savePhoto: (file: string | Blob) => void;\n};\n\nexport class Profile extends PureComponent<ProfilePropsType> {\n  render(): ReactElement {\n    const { profile, status, updateStatus, isOwner, savePhoto } = this.props;\n\n    return (\n      <div style={{ padding: '20px' }}>\n        <ProfileInfo\n          isOwner={isOwner}\n          profile={profile}\n          status={status}\n          updateStatus={updateStatus}\n          savePhoto={savePhoto}\n        />\n        <MyPostsContainer />\n      </div>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport style from './Post.module.scss';\n\ntype PostPropsType = {\n  message: string;\n  likeCount: number;\n  id: string;\n  isLike: boolean;\n  onClickRemovePost: (idPost: string) => void;\n  onClickLike: (idPost: string, isLike: boolean, likeCount: number) => void;\n};\n\nexport class Post extends PureComponent<PostPropsType> {\n  render(): ReactElement {\n    const { isLike, onClickLike, onClickRemovePost, likeCount, id, message } = this.props;\n\n    const classNameLike = ` ${style.like} ${isLike ? style.likeActive : ''}`;\n\n    return (\n      <div className={style.post}>\n        <div className={style.item}>\n          <img alt=\"\" src=\"https://randomuser.me/api/portraits/women/57.jpg\" />\n          {message}\n          <button\n            type=\"button\"\n            onClick={() => onClickRemovePost(id)}\n            className={style.like}\n          >\n            x\n          </button>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => onClickLike(id, isLike, likeCount)}\n              className={classNameLike}\n            >\n              ♥{likeCount}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport { Post } from '.';\n\nimport { PostsType } from 'type';\n\ntype PostMapPropsType = {\n  posts: PostsType[];\n  onClickRemovePost: (idPost: string) => void;\n  onClickLike: (idPost: string, isLike: boolean) => void;\n};\n\nexport class PostMap extends PureComponent<PostMapPropsType> {\n  render(): ReactElement {\n    const { posts, onClickRemovePost, onClickLike } = this.props;\n\n    return (\n      <>\n        {posts.map(({ id, likeCount, isLike, message }) => (\n          <Post\n            key={id}\n            message={message}\n            likeCount={likeCount}\n            id={id}\n            isLike={isLike}\n            onClickRemovePost={onClickRemovePost}\n            onClickLike={onClickLike}\n          />\n        ))}\n      </>\n    );\n  }\n}\n","import { ComponentType, PureComponent, ReactElement } from 'react';\n\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { MyPostsPropsType } from './MyPostsContainer';\nimport { PostMap } from './post';\n\nimport { TextArea } from 'components';\nimport { maxLengthCreator, requiredField } from 'utils';\n\ntype newMyPostDataType = {\n  newMyPost: string;\n};\n\nconst lengthText = 10;\n\nconst maxLength10 = maxLengthCreator(lengthText);\n\nconst NewMyPosts: ComponentType<InjectedFormProps<newMyPostDataType>> = ({\n  handleSubmit,\n}: InjectedFormProps<newMyPostDataType>) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      <Field\n        type=\"text\"\n        component={TextArea}\n        name=\"newMyPost\"\n        validate={[requiredField, maxLength10]}\n      />\n    </div>\n    <div>\n      {/* eslint-disable-next-line react/button-has-type */}\n      <button>Add post</button>\n    </div>\n  </form>\n);\n\nconst ReduxNewMyPosts = reduxForm<newMyPostDataType>({ form: 'newMyPosts' })(NewMyPosts);\n\nexport class MyPosts extends PureComponent<MyPostsPropsType> {\n  render(): ReactElement {\n    const { addPost, onClickRemovePost, onClickLike, posts } = this.props;\n\n    const onAddNewPostHandler = (formData: newMyPostDataType): void => {\n      addPost(formData.newMyPost);\n    };\n\n    return (\n      <div style={{ display: 'block', marginTop: '20px' }}>\n        <ReduxNewMyPosts onSubmit={onAddNewPostHandler} />\n        <div>\n          <PostMap\n            onClickLike={onClickLike}\n            posts={posts}\n            onClickRemovePost={onClickRemovePost}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { MyPosts } from './MyPosts';\n\nimport { AppStateType } from 'store';\nimport { addLike, addPost, removePost } from 'store/actions';\nimport { PostsType } from 'type';\n\ntype mapStateToPropsType = {\n  posts: PostsType[];\n};\n\ntype mapDispatchToPropsType = {\n  addPost: (newText: string) => void;\n  onClickRemovePost: (idPost: string) => void;\n  onClickLike: (idPost: string, isLike: boolean) => void;\n};\n\nexport type MyPostsPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n  posts: state.profilePage.posts,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => ({\n  addPost: (newText: string) => {\n    dispatch(addPost(newText));\n  },\n\n  onClickRemovePost: (idPost: string) => {\n    dispatch(removePost(idPost));\n  },\n\n  onClickLike: (idPost: string, isLike: boolean) => {\n    if (!isLike) dispatch(addLike(idPost, true));\n    else dispatch(addLike(idPost, false));\n  },\n});\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.e4966e0f.png\";","export default __webpack_public_path__ + \"static/media/profileBackground.63927d03.webp\";","import { PureComponent, ReactElement } from 'react';\n\nexport type ContactTypeProps = {\n  contactTitle: string;\n  contactValue: string | null;\n};\n\nexport class Contact extends PureComponent<ContactTypeProps> {\n  render(): ReactElement {\n    const { contactTitle, contactValue } = this.props;\n    return (\n      <div>\n        <b>{contactTitle}</b>: {contactValue}\n      </div>\n    );\n  }\n}\n","import { ChangeEvent, PureComponent, ReactElement } from 'react';\n\nimport style from './ProfileInfo.module.scss';\n\nimport avatarDefault from 'assets/img/defaultAvatar.png';\nimport background from 'assets/img/profileBackground.webp';\nimport { ProfileStatus } from 'components';\nimport { Contact } from 'components/profile/profileInfo/Contact';\nimport { ContactsType, ProfileType } from 'type';\n\ntype ProfileInfoPropsType = {\n  profile: ProfileType;\n  status: string;\n  updateStatus: (userId: string) => void;\n  isOwner: boolean;\n  savePhoto: (file: string | Blob) => void;\n};\n\nconst ZERO_FILE = 0;\n\nexport class ProfileInfo extends PureComponent<ProfileInfoPropsType> {\n  render(): ReactElement {\n    const { profile, status, updateStatus, isOwner, savePhoto } = this.props;\n    const {\n      photos: { large },\n      fullName,\n      lookingForAJob,\n      lookingForAJobDescription,\n      contacts,\n      aboutMe,\n    } = profile;\n\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>): void => {\n      if (e.target.files!.length) {\n        savePhoto(e.target.files![ZERO_FILE]);\n      }\n    };\n\n    let arrayContacts = Object.keys({} as ContactsType) as Array<keyof ContactsType>;\n\n    if (contacts) {\n      arrayContacts = Object.keys(contacts) as Array<keyof ContactsType>;\n    }\n\n    return (\n      <div>\n        <div className={style.content}>\n          <img alt=\"\" src={background} />\n        </div>\n\n        <div className={style.avatar}>\n          <img alt=\"\" src={profile && large ? large : avatarDefault} />\n          {isOwner && <input onChange={onMainPhotoSelected} type=\"file\" />}\n        </div>\n        <div>\n          <div style={{ padding: '20px' }}>{profile && fullName}</div>\n        </div>\n\n        <div>\n          <div>\n            <div>\n              <b>Full Name: </b>: {fullName}\n            </div>\n            <div>\n              <b>Looking for job</b>: {lookingForAJob ? 'yes' : 'no'}\n            </div>\n            <div>\n              <b>My Professional skills</b>\n              {lookingForAJob && lookingForAJobDescription}\n            </div>\n          </div>\n          <div>\n            <div>\n              <b>About me:</b> {aboutMe}\n            </div>\n            <b>Contacts:</b>\n            {arrayContacts.map(key => (\n              <Contact key={key} contactTitle={key} contactValue={contacts[key]} />\n            ))}\n          </div>\n          <ProfileStatus isOwner={isOwner} status={status} updateStatus={updateStatus} />\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/no-autofocus */\nimport React, { ReactElement } from 'react';\n\ntype ProfileInfoPropsType = {\n  status: string;\n  updateStatus: (userId: string) => void;\n  isOwner: boolean;\n};\n\ntype ProfileInfoStateType = {\n  statusState: string;\n  editMode: boolean;\n};\n\nexport class ProfileStatus extends React.Component<\n  ProfileInfoPropsType,\n  ProfileInfoStateType\n> {\n  constructor(props: ProfileInfoPropsType) {\n    super(props);\n    const { status: statusProps } = this.props;\n    this.state = {\n      editMode: false,\n      statusState: statusProps,\n    };\n  }\n\n  componentDidUpdate(prevProps: Readonly<ProfileInfoPropsType>): void {\n    const { status: statusProps } = this.props;\n    if (prevProps.status !== statusProps) {\n      this.changeStatus();\n    }\n  }\n\n  changeStatus = (): void => {\n    const { status: statusProps } = this.props;\n    this.setState({ statusState: statusProps });\n  };\n\n  changeOnClickStatus = (e: { currentTarget: { value: string } }): void => {\n    this.setState({ statusState: e.currentTarget.value });\n  };\n\n  offActivateEditMode = (): void => {\n    const { updateStatus } = this.props;\n    const { statusState } = this.state;\n    this.setState({ editMode: false });\n    updateStatus(statusState);\n  };\n\n  activateEditMode = (): void => {\n    this.setState({ editMode: true });\n  };\n\n  render(): ReactElement {\n    const { status: statusProps, isOwner } = this.props;\n    const { editMode, statusState } = this.state;\n\n    return (\n      <div>\n        {!editMode && (\n          <span onDoubleClick={isOwner ? this.activateEditMode : undefined}>\n            status: {statusProps}\n          </span>\n        )}\n        {isOwner && editMode && (\n          <input\n            autoFocus\n            onBlur={this.offActivateEditMode}\n            value={statusState}\n            onChange={this.changeOnClickStatus}\n            type=\"text\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/defaultUsersAvatar.04d66165.webp\";","import { PureComponent, ReactElement } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport style from './User.module.scss';\n\nimport userPhoto from 'assets/img/defaultUsersAvatar.webp';\nimport { path } from 'enum';\n\ntype UserPropsType = {\n  idUser: string;\n  photos: { small: string; large: string };\n  status: string;\n  name: string;\n  age: number;\n  followed: boolean;\n  follow: (id: string) => void;\n  unFollow: (id: string) => void;\n  followingInProgress: number[];\n};\n\nexport class User extends PureComponent<UserPropsType> {\n  render(): ReactElement {\n    const {\n      age,\n      name,\n      idUser,\n      photos,\n      followed,\n      status,\n      follow,\n      unFollow,\n      followingInProgress,\n    } = this.props;\n\n    const { small } = photos;\n\n    const disableFollow = (id: string): boolean =>\n      followingInProgress.some(idFollow => idFollow === +id);\n\n    return (\n      <div key={idUser} className={style.wrapper}>\n        <div>\n          <div className={style.avatar}>\n            <NavLink to={`${path.profile}${idUser}`}>\n              <img src={small === null ? userPhoto : small} alt={name} />\n            </NavLink>\n          </div>\n          <div>\n            {followed ? (\n              <button\n                type=\"button\"\n                disabled={disableFollow(idUser)}\n                onClick={() => unFollow(idUser)}\n              >\n                Unfollow\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                disabled={disableFollow(idUser)}\n                onClick={() => follow(idUser)}\n              >\n                Follow\n              </button>\n            )}\n          </div>\n        </div>\n        <div className={style.content}>\n          <div className={style.description}>\n            <div>{name}</div>\n            <div>{age}</div>\n            <div>{status}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nexport const instance = axios.create({\n  withCredentials: true,\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    'API-KEY': process.env.REACT_APP_API_KEY as string,\n  },\n});\n","import { instance } from './instanceApi';\n\nexport const authApi = {\n  authMe() {\n    return instance.get(`auth/me`).then(response => response.data);\n  },\n  loginMe(email: string, password: string, rememberMe = false) {\n    return instance\n      .post(`auth/login`, { email, password, rememberMe })\n      .then(response => response.data);\n  },\n  logoutMe() {\n    return instance.delete(`auth/login`).then(response => response.data);\n  },\n};\n","import { instance } from './instanceApi';\n\nimport { CommonResponseType, PhotosType, ProfileType } from 'type';\n\nexport const profileAPI = {\n  authMe(userId: string) {\n    return instance.get<ProfileType>(`profile/${userId}`).then(response => response.data);\n  },\n  getStatus(userId: string) {\n    return instance\n      .get<{ status: string }>(`profile/status/${userId}`)\n      .then(response => response.data);\n  },\n  updateStatusApi(status: string) {\n    return instance.put<CommonResponseType<{}>>(`profile/status`, { status });\n  },\n  savePhoto(file: string | Blob) {\n    const formData = new FormData();\n    formData.append('image', file);\n    return instance.put<CommonResponseType<{ photos: PhotosType }>>(\n      `profile/photo`,\n      formData,\n      {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      },\n    );\n  },\n};\n","import { instance } from './instanceApi';\n\nexport const usersAPI = {\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n  getUsers(currentPage: number = 1, pageSize: number = 5) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then(response => response.data);\n  },\n  follow(id: string) {\n    return instance.post(`follow/${id}`).then(response => response.data);\n  },\n  unFollow(id: string) {\n    return instance.delete(`follow/${id}`).then(response => response.data);\n  },\n};\n","export function requiredField<T>(value: T): string | undefined {\n  if (value) return undefined;\n  return 'Field is Required';\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n  return undefined;\n};\n","/* eslint-disable */\nexport const paginator = (\n  currentPage: number,\n  totalCount: number,\n  pageSize: number,\n): number[] => {\n  const pagesCounter = Math.ceil(totalCount / pageSize);\n  const pages = [];\n\n  if (currentPage < 7) {\n    for (let i = 1; i <= currentPage + 5; i++) {\n      pages.push(i);\n    }\n    pages.push(pagesCounter);\n  } else if (currentPage + 5 >= pagesCounter) {\n    pages.push(1);\n    for (let i = currentPage - 5; i <= pagesCounter; i++) {\n      pages.push(i);\n    }\n  } else {\n    pages.push(1);\n    for (let i = currentPage - 5; i <= currentPage + 5; i++) {\n      pages.push(i);\n    }\n    pages.push(pagesCounter);\n  }\n// const pagesCounter = Math.ceil(totalCount / pageSize);\n//   const pages = [];\n//\n//   const firstPage = 1;\n//   const fivePages = 5;\n//   const oneNumber = 1;\n//   const sevenFirsPages = 7;\n//   const previousPages = currentPage - fivePages;\n//   const nextPages = currentPage + fivePages;\n//\n//   if (currentPage < sevenFirsPages) {\n//     for (let i = 1; i <= nextPages; i + oneNumber) {\n//       pages.push(i);\n//     }\n//     pages.push(pagesCounter);\n//   } else if (nextPages >= pagesCounter) {\n//     pages.push(firstPage);\n//     for (let i = previousPages; i <= pagesCounter; i + oneNumber) {\n//       pages.push(i);\n//     }\n//   } else {\n//     pages.push(firstPage);\n//     for (let i = previousPages; i <= nextPages; i + oneNumber) {\n//       pages.push(i);\n//     }\n//     pages.push(pagesCounter);\n//   }\n\n\n  return pages;\n};\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__3pHcU\",\"title\":\"login_title__99Rfy\",\"wrapper__field\":\"login_wrapper__field__830vF\",\"button\":\"login_button__229Da\"};","import { PureComponent, ReactElement } from 'react';\n\nimport style from './TextArea.module.scss';\n\nimport { FormPropsType } from '.';\n\nexport class Input extends PureComponent<FormPropsType> {\n  render(): ReactElement {\n    const {\n      input,\n      placeholder,\n      type,\n      meta: { touched, error, warning },\n    } = this.props;\n\n    const hasError = touched && error;\n\n    return (\n      <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\n        <div>\n          <input\n            className={style.input}\n            {...input}\n            placeholder={placeholder}\n            type={type}\n          />\n        </div>\n        <div>\n          {touched &&\n            ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n      </div>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport style from './TextArea.module.scss';\n\nimport { FormPropsType } from '.';\n\nexport class TextArea extends PureComponent<FormPropsType> {\n  render(): ReactElement {\n    const {\n      input,\n      placeholder,\n      meta: { touched, error, warning },\n    } = this.props;\n\n    const hasError = touched && error;\n\n    return (\n      <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\n        <div>\n          {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n          <textarea {...input} placeholder={placeholder} />\n        </div>\n        <div>\n          {touched &&\n            ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n      </div>\n    );\n  }\n}\n","import { ReactElement } from 'react';\n\nexport const Preloader = (): ReactElement => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"24\">\n    <path\n      fill=\"#979797\"\n      d=\"M12.432 8.42a2.203 2.203 0 01-2.196-2.21c0-1.22.983-2.21 2.196-2.21s2.196.99 2.196 2.21a2.208 2.208 0 01-2.196 2.21zm-4.677 1.756a2.014 2.014 0 01-2.007-2.02c0-1.116.899-2.02 2.007-2.02 1.109 0 2.007.904 2.007 2.02a2.017 2.017 0 01-2.007 2.02zm-1.984 4.569a1.77 1.77 0 01-1.636-1.1 1.79 1.79 0 01.384-1.944 1.763 1.763 0 011.93-.385 1.783 1.783 0 011.093 1.648 1.78 1.78 0 01-1.771 1.78zm1.985 4.523c-.83 0-1.501-.676-1.501-1.51 0-.835.672-1.51 1.5-1.51.83 0 1.501.675 1.501 1.51a1.509 1.509 0 01-1.5 1.51zm4.676 1.729c-.723 0-1.31-.59-1.31-1.318 0-.728.587-1.317 1.31-1.317.723 0 1.309.59 1.309 1.317 0 .728-.586 1.318-1.31 1.318zm4.745-2.227a1.062 1.062 0 01-1.058-1.066c0-.588.474-1.065 1.058-1.065a1.065 1.065 0 010 2.131zm1.943-4.926a.871.871 0 01-.868-.874c0-.483.389-.874.868-.874a.876.876 0 01.614 1.492.865.865 0 01-.614.256zM16.502 8.22a.675.675 0 011.3-.263c.123.3.02.645-.249.826a.675.675 0 01-1.052-.563z\"\n    />\n  </svg>\n);\n","import { ReactElement } from 'react';\n\nexport const IconS = (): ReactElement => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n    <path\n      fill=\"#3F8CFF\"\n      d=\"M32 2C15.432 2 2 15.431 2 32c0 16.569 13.432 30 30 30s30-13.432 30-30C62 15.431 48.568 2 32 2m8.953 42.678c-2.049 1.752-4.943 2.627-8.684 2.627-3.82 0-6.826-.863-9.014-2.588-2.189-1.727-3.283-4.098-3.283-7.117h5.787c.188 1.326.557 2.316 1.105 2.973 1.006 1.195 2.727 1.791 5.166 1.791 1.461 0 2.646-.156 3.557-.473 1.73-.604 2.594-1.725 2.594-3.365 0-.957-.424-1.699-1.27-2.225-.848-.512-2.191-.965-4.029-1.357l-3.141-.689c-3.088-.684-5.209-1.424-6.363-2.224-1.957-1.339-2.934-3.432-2.934-6.28 0-2.599.957-4.757 2.869-6.476 1.912-1.72 4.723-2.579 8.43-2.579 3.096 0 5.734.81 7.922 2.431 2.184 1.621 3.33 3.974 3.438 7.058h-5.828c-.107-1.745-.887-2.985-2.34-3.721-.969-.485-2.174-.729-3.613-.729-1.602 0-2.879.315-3.834.945s-1.434 1.509-1.434 2.638c0 1.037.471 1.811 1.414 2.322.604.342 1.889.742 3.855 1.201l5.092 1.201c2.23.524 3.904 1.227 5.018 2.105 1.729 1.365 2.594 3.341 2.594 5.925 0 2.651-1.023 4.854-3.074 6.606\"\n    />\n  </svg>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { lazy, PureComponent, ReactElement, Suspense } from 'react';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport style from 'App.module.scss';\nimport { AppContainerType } from 'AppContainer';\nimport { HeaderContainer, Navbar, Preloader } from 'components';\nimport { path } from 'enum';\n\nconst DialogsContainer = lazy(() => import('components/dialogs/DialogsContainer'));\nconst ProfileContainer = lazy(() => import('components/profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import('components/users/UsersContainer'));\nconst Settings = lazy(() => import('components/settings/Settings'));\nconst LoginContainer = lazy(() => import('components/login/LoginContainer'));\n\nexport class App extends PureComponent<AppContainerType> {\n  componentDidMount(): void {\n    const { initializedApp } = this.props;\n    initializedApp();\n  }\n\n  render(): ReactElement {\n    const { initialized } = this.props;\n    if (!initialized) {\n      return (\n        <div className={style.preloader}>\n          <Preloader />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <HeaderContainer />\n        <div className={style.wrapper}>\n          <Navbar />\n          <div className={style.content}>\n            <Suspense fallback={<div>Loading</div>}>\n              <Routes>\n                <Route path={path.root} element={<Navigate to={path.profile} />} />\n                <Route path={path.profile} element={<ProfileContainer />}>\n                  <Route path={path.userId} element={<ProfileContainer />} />\n                </Route>\n                <Route path={path.dialogs} element={<DialogsContainer />}>\n                  <Route path={path.userId} element={<DialogsContainer />} />\n                </Route>\n                <Route path={path.users} element={<UsersContainer />} />\n                <Route path={path.login} element={<LoginContainer />} />\n                <Route path={path.settings} element={<Settings />} />\n              </Routes>\n            </Suspense>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\n\nimport { App } from 'App';\nimport { AppStateType } from 'store';\nimport { getInitialized } from 'store/selectors';\nimport { initializedApp } from 'store/thunks';\n\ntype mapDispatchToPropsType = {\n  initializedApp: () => void;\n};\n\ntype mapStateToPropsType = {\n  initialized: boolean;\n};\n\nexport type AppContainerType = mapDispatchToPropsType & mapStateToPropsType;\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\n  initialized: getInitialized(state),\n});\n\nexport const AppContainer = connect(mapStateToProps, {\n  initializedApp,\n})(App);\n","import { ActionsAppType } from 'store/actions';\n\ntype initialStateType = {\n  initialized: boolean;\n};\n\nconst initialState = {\n  initialized: false,\n};\n\nexport const AppReducer = (\n  state: initialStateType = initialState,\n  action: ActionsAppType,\n): initialStateType => {\n  switch (action.type) {\n    case 'INITIALIZED_SUCCESS':\n      return {\n        ...state,\n        initialized: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { v1 } from 'uuid';\n\nimport { ActionsDialogsType } from 'store/actions';\nimport { DialogType, MessagesType } from 'type';\n\nexport type InitialDialogsStateType = typeof initialState;\n\nconst initialState = {\n  dialogs: [\n    { id: v1(), name: 'Dmitriy' },\n    { id: v1(), name: 'Andrey' },\n    { id: v1(), name: 'Mariya' },\n    { id: v1(), name: 'Larisa' },\n    { id: v1(), name: 'Sergey' },\n    { id: v1(), name: 'Dmitriy' },\n  ] as DialogType[],\n  messages: [\n    { id: v1(), message: 'Hello friend!' },\n    { id: v1(), message: 'Glad to see you!' },\n    { id: v1(), message: 'How are you?' },\n  ] as MessagesType[],\n};\n\nexport const DialogsReducer = (\n  state = initialState,\n  action: ActionsDialogsType,\n): InitialDialogsStateType => {\n  switch (action.type) {\n    case 'ADD-MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, { id: v1(), message: action.newText }],\n      };\n    default:\n      return state;\n  }\n};\n","import { v1 } from 'uuid';\n\nimport { ActionsProfileType } from 'store/actions';\nimport { PostsType, ProfileType } from 'type';\n\nexport type InitialProfileStateType = typeof initialState;\n\nconst initialState = {\n  posts: [\n    { id: v1(), message: `Hi, how are you?`, likeCount: 10, isLike: false },\n    { id: v1(), message: `It's my first post`, likeCount: 15, isLike: false },\n    { id: v1(), message: `React, it's cool!`, likeCount: 50, isLike: false },\n  ] as PostsType[],\n  profile: {\n    photos: {\n      small: '',\n      large: '',\n    },\n  } as ProfileType,\n  status: '' as string,\n};\n\nconst PLUS_ONE = 1;\n\nexport const ProfileReducer = (\n  state = initialState,\n  action: ActionsProfileType,\n): InitialProfileStateType => {\n  switch (action.type) {\n    case 'ADD-POST':\n      return {\n        ...state,\n        posts: [\n          {\n            id: v1(),\n            message: action.newText.trim(),\n            likeCount: 0,\n            isLike: false,\n          },\n          ...state.posts,\n        ],\n      };\n    case 'REMOVE-POST':\n      return {\n        ...state,\n        posts: state.posts.filter(p => p.id !== action.removeId),\n      };\n    case 'ADD-LIKE':\n      return {\n        ...state,\n        posts: state.posts.map(p =>\n          // eslint-disable-next-line no-nested-ternary\n          p.id === action.LikeId\n            ? !p.isLike\n              ? { ...p, isLike: action.isLike, likeCount: p.likeCount + PLUS_ONE }\n              : { ...p, isLike: action.isLike, likeCount: p.likeCount - PLUS_ONE }\n            : p,\n        ),\n      };\n    case 'SET-USER-PROFILE':\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    case 'SET-USER-STATUS':\n      return {\n        ...state,\n        status: action.status,\n      };\n    case 'SAVE-PHOTO-SUCCESS':\n      return { ...state, profile: { ...state.profile, photos: action.photo } };\n    default:\n      return state;\n  }\n};\n","import { ActionsUsersType } from 'store/actions';\nimport { UserType } from 'type';\n\nexport type InitialUsersStateType = typeof initialState;\n\nconst initialState = {\n  users: [] as UserType[],\n  pageSize: 5,\n  totalUserCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [] as number[],\n};\n\nexport const UsersReducer = (\n  state: InitialUsersStateType = initialState,\n  action: ActionsUsersType,\n): InitialUsersStateType => {\n  switch (action.type) {\n    case 'SET-FOLLOW':\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user.id === action.id) {\n            return { ...user, followed: true };\n          }\n          return user;\n        }),\n      };\n    case 'SET-UNFOLLOW':\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user.id === action.id) {\n            return { ...user, followed: false };\n          }\n          return user;\n        }),\n      };\n    case 'SET-USERS':\n      return {\n        ...state,\n        users: [...action.users],\n      };\n    case 'SET-CURRENT-PAGE':\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      };\n    case 'SET-TOTAL-USER-COUNT':\n      return {\n        ...state,\n        totalUserCount: action.totalUserCount,\n      };\n    case 'TOGGLE-IS-FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    case 'FOLLOWING-IN-PROGRESS':\n      return {\n        ...state,\n\n        followingInProgress: action.isFollow\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(i => i !== action.userId),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { ActionsAuthType } from 'store/actions';\n\ntype initialStateType = {\n  data: dataType;\n  isFetching: boolean;\n  isAuth: boolean;\n};\ntype dataType = {\n  userId: string;\n  email: string;\n  login: string;\n};\n\nconst initialState = {\n  data: {} as dataType,\n  isFetching: true,\n  isAuth: false,\n};\n\nexport const AuthReducer = (\n  state: initialStateType = initialState,\n  action: ActionsAuthType,\n): initialStateType => {\n  switch (action.type) {\n    case 'SET-USERS-DATA':\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          email: action.data.email,\n          login: action.data.login,\n          userId: action.data.usersId,\n        },\n      };\n    case 'TOGGLE-IS-FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching,\n      };\n    case 'TOGGLE-IS-AUTH':\n      return {\n        ...state,\n        isAuth: action.isAuth,\n      };\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunkMiddleware from 'redux-thunk';\n\nimport { UsersReducer } from 'store/reducers';\nimport { AppReducer } from 'store/reducers/appReducer';\nimport { AuthReducer } from 'store/reducers/authReducer';\nimport { DialogsReducer } from 'store/reducers/dialogsReducer';\nimport { ProfileReducer } from 'store/reducers/profileReducer';\n\nexport const rootReducer = combineReducers({\n  profilePage: ProfileReducer,\n  dialogsPage: DialogsReducer,\n  usersPage: UsersReducer,\n  authPage: AuthReducer,\n  form: formReducer,\n  app: AppReducer,\n});\n\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n","import './index.css';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport { AppContainer } from 'AppContainer';\nimport { store } from 'store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"TextArea_formControl__2Fo6X\",\"error\":\"TextArea_error__2Ee_z\",\"input\":\"TextArea_input__2122d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2S7vf\",\"wrap\":\"Header_wrap__2GzLE\",\"name\":\"Header_name__2SgUr\",\"button\":\"Header_button__13QgI\"};","import { AppStateType } from 'store/store';\n\nexport const getInitialized = (state: AppStateType): boolean => state.app.initialized;\n","import { AppStateType } from 'store/store';\n\nexport const getLogin = (state: AppStateType): string => state.authPage.data.login;\nexport const getEmail = (state: AppStateType): string => state.authPage.data.email;\nexport const getUserId = (state: AppStateType): string => state.authPage.data.userId;\nexport const getAuthIsFetching = (state: AppStateType): boolean =>\n  state.authPage.isFetching;\nexport const getIsAuth = (state: AppStateType): boolean => state.authPage.isAuth;\n","import { AppStateType } from 'store/store';\nimport { DialogType, MessagesType } from 'type';\n\nexport const getDialogs = (state: AppStateType): DialogType[] =>\n  state.dialogsPage.dialogs;\n\nexport const getMessages = (state: AppStateType): MessagesType[] =>\n  state.dialogsPage.messages;\n","import { AppStateType } from 'store/store';\nimport { ProfileType } from 'type';\n\nexport const getProfile = (state: AppStateType): ProfileType => state.profilePage.profile;\nexport const getStatus = (state: AppStateType): string => state.profilePage.status;\n","import { AppStateType } from 'store/store';\nimport { UserType } from 'type';\n\nexport const getUsers = (state: AppStateType): UserType[] => state.usersPage.users;\nexport const getPageSize = (state: AppStateType): number => state.usersPage.pageSize;\nexport const getTotalUserCount = (state: AppStateType): number =>\n  state.usersPage.totalUserCount;\nexport const getCurrentPage = (state: AppStateType): number =>\n  state.usersPage.currentPage;\nexport const getUsersIsFetching = (state: AppStateType): boolean =>\n  state.usersPage.isFetching;\nexport const getFollowingInProgress = (state: AppStateType): number[] =>\n  state.usersPage.followingInProgress;\n","import { PureComponent, ReactElement } from 'react';\n\nimport { Field, InjectedFormProps } from 'redux-form';\n\nimport style from './login.module.scss';\n\nimport { Input } from 'components/common';\nimport { maxLengthCreator, requiredField } from 'utils';\n\nexport type FormDataType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\n\nconst lengthText = 30;\nconst maxLength30 = maxLengthCreator(lengthText);\n\nexport class LoginForm extends PureComponent<InjectedFormProps<FormDataType>> {\n  render(): ReactElement {\n    const { handleSubmit, error } = this.props;\n    return (\n      <form className={style.wrapper} onSubmit={handleSubmit}>\n        <div className={style.wrapper__field}>\n          <Field\n            placeholder=\"Login\"\n            name=\"email\"\n            type=\"text\"\n            component={Input}\n            validate={[requiredField, maxLength30]}\n          />\n        </div>\n        <div className={style.wrapper__field}>\n          <Field\n            placeholder=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            component={Input}\n            validate={[requiredField, maxLength30]}\n          />\n        </div>\n        <div className={style.wrapper__field}>\n          <Field type=\"checkbox\" name=\"rememberMe\" component=\"input\" />\n          remember me\n        </div>\n        <button className={style.button} type=\"submit\">\n          Login\n        </button>\n        {error ? <div>{error}</div> : null}\n      </form>\n    );\n  }\n}\n","import { PureComponent, ReactElement } from 'react';\n\nimport { Navigate } from 'react-router-dom';\nimport { reduxForm } from 'redux-form';\n\nimport style from './login.module.scss';\nimport { FormDataType, LoginForm } from './LoginForm';\n\nimport { path } from 'enum';\n\ntype LoginPropsType = {\n  login: (email: string, password: string, rememberMe: boolean) => void;\n  isAuth: boolean;\n};\n\nconst ReduxLoginForm = reduxForm<FormDataType>({\n  form: 'login',\n})(LoginForm);\n\nexport class Login extends PureComponent<LoginPropsType> {\n  render(): ReactElement {\n    const { login, isAuth } = this.props;\n\n    const onSubmit = (formData: FormDataType): void => {\n      login(formData.email, formData.password, formData.rememberMe);\n    };\n\n    if (isAuth) {\n      return <Navigate to={path.profile} />;\n    }\n\n    return (\n      <div className={style.wrapper}>\n        <h1 className={style.title}> LOGIN </h1>\n        <ReduxLoginForm onSubmit={onSubmit} />\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3_pq3\",\"like\":\"Post_like__2C-6o\",\"likeActive\":\"Post_likeActive__1w5kV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__1mqme\",\"avatar\":\"User_avatar__2XcOL\",\"content\":\"User_content__2na9J\",\"description\":\"User_description__3keKC\"};","import { profileAPI } from 'api';\nimport { resultCode } from 'enum';\nimport { savePhotoSuccess, setUserProfile, setUserStatus } from 'store/actions';\nimport { AppThunkType } from 'store/thunks';\n\nexport const requestProfile =\n  (userId: string): AppThunkType =>\n  dispatch => {\n    profileAPI.authMe(userId).then(response => dispatch(setUserProfile(response)));\n  };\n\nexport const requestStatus =\n  (userId: string): AppThunkType =>\n  dispatch => {\n    profileAPI.getStatus(userId).then(response => dispatch(setUserStatus(response)));\n  };\n\nexport const updateStatus =\n  (status: string): AppThunkType =>\n  dispatch => {\n    profileAPI.updateStatusApi(status).then(response => {\n      if (response.data.resultCode === resultCode.success) {\n        dispatch(setUserStatus(status));\n      }\n    });\n  };\n\nexport const savePhoto =\n  (file: string | Blob): AppThunkType =>\n  dispatch => {\n    profileAPI.savePhoto(file).then(response => {\n      if (response.data.resultCode === resultCode.success) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n      }\n    });\n  };\n","import { stopSubmit } from 'redux-form';\n\nimport { authApi } from 'api';\nimport { resultCode } from 'enum';\nimport { setToggleIsAuth, setUserAuth } from 'store/actions';\nimport { AppThunkType } from 'store/thunks/type';\n\nexport const getAuthUserData = (): AppThunkType<Promise<void>> => dispatch =>\n  authApi.authMe().then(response => {\n    if (response.resultCode === resultCode.success) {\n      dispatch(setUserAuth(response.data.id, response.data.email, response.data.login));\n      dispatch(setToggleIsAuth(true));\n    }\n  });\n\nconst zeroElement = 0;\n\nexport const login =\n  (email: string, password: string, rememberMe: boolean): AppThunkType =>\n  dispatch => {\n    authApi.loginMe(email, password, rememberMe).then(response => {\n      if (response.resultCode === resultCode.success) {\n        dispatch(getAuthUserData());\n      } else {\n        dispatch(stopSubmit('login', { _error: response.messages[zeroElement] }));\n      }\n    });\n  };\n\nexport const logout = (): AppThunkType => dispatch => {\n  authApi.logoutMe().then(response => {\n    if (response.resultCode === resultCode.success) {\n      dispatch(setToggleIsAuth(false));\n    }\n  });\n};\n","import { initializedSuccess } from 'store/actions';\nimport { getAuthUserData, AppThunkType } from 'store/thunks';\n\nexport const initializedApp = (): AppThunkType => async dispatch => {\n  const promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n","import { usersAPI } from 'api';\nimport { resultCode } from 'enum';\nimport {\n  setCurrentPage,\n  setFollow,\n  setToggleIsFetching,\n  setTotalUserCount,\n  setUnFollow,\n  setUsers,\n  toggleFollowingInProgress,\n} from 'store/actions';\nimport { AppThunkType } from 'store/thunks';\n\nexport const requestUsers =\n  (currentPage: number, pageSize: number): AppThunkType =>\n  dispatch => {\n    dispatch(setToggleIsFetching(true));\n    dispatch(setCurrentPage(currentPage));\n    usersAPI.getUsers(currentPage, pageSize).then(response => {\n      dispatch(setToggleIsFetching(false));\n      dispatch(setUsers(response.items));\n      dispatch(setTotalUserCount(response.totalCount));\n    });\n  };\n\nexport const follow =\n  (userId: string): AppThunkType =>\n  dispatch => {\n    dispatch(toggleFollowingInProgress(true, +userId));\n    usersAPI.follow(userId).then(response => {\n      if (response.resultCode === resultCode.success) {\n        dispatch(setFollow(userId));\n        dispatch(toggleFollowingInProgress(false, +userId));\n      }\n    });\n  };\n\nexport const unFollow =\n  (userId: string): AppThunkType =>\n  dispatch => {\n    dispatch(toggleFollowingInProgress(true, +userId));\n    usersAPI.unFollow(userId).then(response => {\n      if (response.resultCode === resultCode.success) {\n        dispatch(setUnFollow(userId));\n        dispatch(toggleFollowingInProgress(false, +userId));\n      }\n    });\n  };\n","import { PureComponent, ReactElement } from 'react';\n\nimport { User } from 'components';\nimport { UserType } from 'type';\nimport { paginator } from 'utils';\n\ntype UsersPropsType = {\n  users: UserType[];\n  onPageChanged: (pageNumber: number) => void;\n  totalUserCount: number;\n  pageSize: number;\n  currentPage: number;\n  followingInProgress: number[];\n  follow: (id: string) => void;\n  unFollow: (id: string) => void;\n};\n\nexport class Users extends PureComponent<UsersPropsType> {\n  render(): ReactElement {\n    const {\n      onPageChanged,\n      pageSize,\n      totalUserCount,\n      currentPage,\n      users,\n      followingInProgress,\n      follow,\n      unFollow,\n    } = this.props;\n\n    const pages = paginator(currentPage, totalUserCount, pageSize);\n\n    const onClickPage = (page: number): void => {\n      onPageChanged(page);\n    };\n\n    const pageMap = pages.map(page => (\n      <button\n        type=\"button\"\n        key={page}\n        onClick={() => onClickPage(page)}\n        style={{\n          fontWeight: currentPage === page ? 'bold' : 'normal',\n          color: currentPage === page ? 'darkred' : '',\n          cursor: 'pointer',\n          padding: '5px',\n        }}\n      >\n        {page}\n      </button>\n    ));\n\n    const usersMap = users.map(({ id, photos, status, name, age, followed }) => (\n      <User\n        idUser={id}\n        status={status}\n        unFollow={unFollow}\n        follow={follow}\n        followingInProgress={followingInProgress}\n        name={name}\n        followed={followed}\n        photos={photos}\n        age={age}\n        key={id}\n      />\n    ));\n\n    return (\n      <div>\n        {usersMap}\n        <div style={{ display: 'flex', justifyContent: 'center' }}>{pageMap}</div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"App_preloader__2ki3T\",\"wrapper\":\"App_wrapper__4q-_j\",\"content\":\"App_content__1Q5MU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__3wqdd\",\"list\":\"Dialogs_list__2J0s2\",\"messages\":\"Dialogs_messages__PyHH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"DialogsName_name__3gHsE\",\"active\":\"DialogsName_active__3ZD3h\"};"],"sourceRoot":""}